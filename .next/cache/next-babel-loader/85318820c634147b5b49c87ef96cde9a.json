{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";var _jsxFileName=\"/home/andrii/Addspire/Kepp alive/test_keepalive_web/pages/index.js\";var __jsx=React.createElement;import React,{useState}from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import{SSE}from\"../utils/sse\";var sourceWith;var sourceWithout;var timerWith;export default function App(){var _this=this;var _useState=useState([]),withChecks=_useState[0],setWithChecks=_useState[1];var _useState2=useState([]),withoutChecks=_useState2[0],setWithoutChecks=_useState2[1];var _useState3=useState(false),withChecksRunning=_useState3[0],setWithChecksRunning=_useState3[1];var _useState4=useState(\"https://quantum.sh\"),url=_useState4[0],setUrl=_useState4[1];var addLog=function addLog(text,without){if(without)setWithoutChecks([{time:Date().toString(),text:text}].concat(_toConsumableArray(withoutChecks)));else setWithChecks([{time:Date().toString(),text:text}].concat(_toConsumableArray(withChecks)));};var startPoll=function startPoll(){return _regeneratorRuntime.async(function startPoll$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(!withChecksRunning){_context.next=4;break;}addLog(\"already running\");return _context.abrupt(\"return\");case 4:addLog(\"starting\");setWithChecksRunning(true);if(sourceWith)sourceWith.close();if(timerWith)clearTimeout(timerWith);source=new SSE(url+\"/document/poll\",{headers:{\"Content-Type\":\"application/json\"},payload:JSON.stringify({timeOnClient:Date().toString()})});timerClose=setTimeout(function(){addLog(\"closed because no ping\");setWithChecksRunning(false);},20000);source.addEventListener(\"message\",function(e){setData({serverDown:false});var news=JSON.parse(e.data);switch(news.messageCode){case\"time\":addLog(\"time on server is \".concat(news.time));break;case\"ping\":if(timerClose)clearTimeout(timerClose);timerClose=setTimeout(function(){addLog(\"closed because no ping\");setWithChecksRunning(false);},20000);break;}});source.addEventListener(\"error\",function(){addLog(\"closed\");setWithChecksRunning(false);});source.stream();_context.next=20;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);console.log(_context.t0);addLog(\"closed\");setWithChecksRunning(false);case 20:case\"end\":return _context.stop();}}},null,null,[[0,15]],Promise);};return __jsx(View,{style:styles.container,__self:this,__source:{fileName:_jsxFileName,lineNumber:81,columnNumber:9}},__jsx(TouchableOpacity,{style:{margin:10,padding:10,backgroundColor:\"green\",color:\"white\"},onPress:startPoll,__self:this,__source:{fileName:_jsxFileName,lineNumber:82,columnNumber:13}},__jsx(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:91,columnNumber:17}},\"Start poll (checks every 20 sec)\")),__jsx(TouchableOpacity,{style:{margin:10,padding:10,backgroundColor:\"red\",color:\"white\"},__self:this,__source:{fileName:_jsxFileName,lineNumber:93,columnNumber:13}},__jsx(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:101,columnNumber:17}},\"Stop poll\")),__jsx(TouchableOpacity,{onPress:function onPress(){return setWithChecks([]);},style:{margin:10,padding:10,backgroundColor:\"grey\",color:\"white\"},__self:this,__source:{fileName:_jsxFileName,lineNumber:103,columnNumber:13}},__jsx(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:112,columnNumber:17}},\"Clear log\")),__jsx(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:114,columnNumber:13}},\"Log\"),withChecks.map(function(item){return __jsx(View,{style:{flexDirection:\"row\"},__self:_this,__source:{fileName:_jsxFileName,lineNumber:116,columnNumber:17}},__jsx(View,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:117,columnNumber:21}},__jsx(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:118,columnNumber:25}},item.time)),__jsx(View,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:120,columnNumber:21}},__jsx(Text,{style:{color:\"blue\"},__self:_this,__source:{fileName:_jsxFileName,lineNumber:121,columnNumber:25}},item.text)));}),__jsx(TouchableOpacity,{style:{margin:10,padding:10,backgroundColor:\"green\",color:\"white\"},__self:this,__source:{fileName:_jsxFileName,lineNumber:126,columnNumber:13}},__jsx(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:134,columnNumber:17}},\"Start without checks\")),__jsx(TouchableOpacity,{style:{margin:10,padding:10,backgroundColor:\"red\",color:\"white\"},__self:this,__source:{fileName:_jsxFileName,lineNumber:136,columnNumber:13}},__jsx(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:144,columnNumber:17}},\"Stop\")),__jsx(TouchableOpacity,{onPress:function onPress(){return setWithChecks([]);},style:{margin:10,padding:10,backgroundColor:\"grey\",color:\"white\"},__self:this,__source:{fileName:_jsxFileName,lineNumber:146,columnNumber:13}},__jsx(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:155,columnNumber:17}},\"Clear log\")),__jsx(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:157,columnNumber:13}},\"Log\"),withChecks.map(function(item){return __jsx(View,{style:{flexDirection:\"row\",flex:1},__self:_this,__source:{fileName:_jsxFileName,lineNumber:159,columnNumber:17}},__jsx(View,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:160,columnNumber:21}},__jsx(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:161,columnNumber:25}},item.time)),__jsx(View,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:163,columnNumber:21}},__jsx(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:164,columnNumber:25}},item.text)));}));}var styles=StyleSheet.create({container:{flex:1},text:{fontSize:16}});","map":{"version":3,"sources":["/home/andrii/Addspire/Kepp alive/test_keepalive_web/pages/index.js"],"names":["withChecks","setWithChecks","useState","withoutChecks","setWithoutChecks","withChecksRunning","setWithChecksRunning","url","setUrl","addLog","time","Date","text","startPoll","sourceWith","clearTimeout","source","headers","payload","timeOnClient","timerClose","setTimeout","setData","serverDown","news","JSON","e","console","styles","margin","padding","backgroundColor","color","flexDirection","item","flex","container","fontSize"],"mappings":"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","sourcesContent":["// @generated: @expo/next-adapter@2.1.52\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\nimport { SSE } from \"../utils/sse\";\n\nlet sourceWith;\nlet sourceWithout;\n\nlet timerWith;\n\nexport default function App() {\n    const [withChecks, setWithChecks] = useState([]);\n    const [withoutChecks, setWithoutChecks] = useState([]);\n    const [withChecksRunning, setWithChecksRunning] = useState(false);\n    const [url, setUrl] = useState(\"https://quantum.sh\");\n\n    const addLog = (text, without) => {\n        if (without)\n            setWithoutChecks([\n                { time: Date().toString(), text },\n                ...withoutChecks,\n            ]);\n        else setWithChecks([{ time: Date().toString(), text }, ...withChecks]);\n    };\n\n    const startPoll = async () => {\n        try {\n            if (withChecksRunning) {\n                addLog(\"already running\");\n                return;\n            }\n            addLog(\"starting\");\n            setWithChecksRunning(true);\n\n            if (sourceWith) sourceWith.close();\n            if (timerWith) clearTimeout(timerWith);\n\n            source = new SSE(url + \"/document/poll\", {\n                headers: { \"Content-Type\": \"application/json\" },\n                payload: JSON.stringify({ timeOnClient: Date().toString() }),\n            });\n\n            timerClose = setTimeout(() => {\n                addLog(\"closed because no ping\");\n\n                setWithChecksRunning(false);\n            }, 20000);\n            source.addEventListener(\"message\", (e) => {\n                setData({ serverDown: false });\n                const news = JSON.parse(e.data);\n\n                switch (news.messageCode) {\n                    case \"time\":\n                        addLog(`time on server is ${news.time}`);\n                        break;\n\n                    case \"ping\":\n                        if (timerClose) clearTimeout(timerClose);\n                        timerClose = setTimeout(() => {\n                            addLog(\"closed because no ping\");\n\n                            setWithChecksRunning(false);\n                        }, 20000);\n\n                        break;\n                }\n            });\n\n            source.addEventListener(\"error\", function () {\n                addLog(\"closed\");\n                setWithChecksRunning(false);\n            });\n            source.stream();\n        } catch (error) {\n            console.log(error);\n            addLog(\"closed\");\n            setWithChecksRunning(false);\n        }\n    };\n    return (\n        <View style={styles.container}>\n            <TouchableOpacity\n                style={{\n                    margin: 10,\n                    padding: 10,\n                    backgroundColor: \"green\",\n                    color: \"white\",\n                }}\n                onPress={startPoll}\n            >\n                <Text>Start poll (checks every 20 sec)</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n                style={{\n                    margin: 10,\n                    padding: 10,\n                    backgroundColor: \"red\",\n                    color: \"white\",\n                }}\n            >\n                <Text>Stop poll</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n                onPress={() => setWithChecks([])}\n                style={{\n                    margin: 10,\n                    padding: 10,\n                    backgroundColor: \"grey\",\n                    color: \"white\",\n                }}\n            >\n                <Text>Clear log</Text>\n            </TouchableOpacity>\n            <Text>Log</Text>\n            {withChecks.map((item) => (\n                <View style={{ flexDirection: \"row\" }}>\n                    <View>\n                        <Text>{item.time}</Text>\n                    </View>\n                    <View>\n                        <Text style={{ color: \"blue\" }}>{item.text}</Text>\n                    </View>\n                </View>\n            ))}\n\n            <TouchableOpacity\n                style={{\n                    margin: 10,\n                    padding: 10,\n                    backgroundColor: \"green\",\n                    color: \"white\",\n                }}\n            >\n                <Text>Start without checks</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n                style={{\n                    margin: 10,\n                    padding: 10,\n                    backgroundColor: \"red\",\n                    color: \"white\",\n                }}\n            >\n                <Text>Stop</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n                onPress={() => setWithChecks([])}\n                style={{\n                    margin: 10,\n                    padding: 10,\n                    backgroundColor: \"grey\",\n                    color: \"white\",\n                }}\n            >\n                <Text>Clear log</Text>\n            </TouchableOpacity>\n            <Text>Log</Text>\n            {withChecks.map((item) => (\n                <View style={{ flexDirection: \"row\", flex: 1 }}>\n                    <View>\n                        <Text>{item.time}</Text>\n                    </View>\n                    <View>\n                        <Text>{item.text}</Text>\n                    </View>\n                </View>\n            ))}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    text: {\n        fontSize: 16,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}