{"ast":null,"code":"var _jsxFileName=\"/home/andrii/Addspire/Kepp alive/test_keepalive_web/pages/index.js\";var __jsx=React.createElement;import React,{useState}from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";export default function App(){var _this=this;var _useState=useState([]),withChecks=_useState[0],setWithChecks=_useState[1];var _useState2=useState([]),withoutChecks=_useState2[0],setWithoutChecks=_useState2[1];return __jsx(View,{style:styles.container,__self:this,__source:{fileName:_jsxFileName,lineNumber:9,columnNumber:9}},__jsx(TouchableOpacity,{style:{margin:10,padding:10,backgroundColor:\"green\",color:\"white\"},__self:this,__source:{fileName:_jsxFileName,lineNumber:10,columnNumber:13}},\"Start poll (checks every 20 sec)\"),__jsx(TouchableOpacity,{style:{margin:10,padding:10,backgroundColor:\"red\",color:\"white\"},__self:this,__source:{fileName:_jsxFileName,lineNumber:20,columnNumber:13}},\"Stop poll\"),__jsx(TouchableOpacity,{onPress:function onPress(){return setWithChecks([]);},style:{margin:10,padding:10,backgroundColor:\"grey\",color:\"white\"},__self:this,__source:{fileName:_jsxFileName,lineNumber:30,columnNumber:13}},\"Clear log\"),__jsx(Text,{__self:this,__source:{fileName:_jsxFileName,lineNumber:41,columnNumber:13}},\"Log\"),withChecks.map(function(item){return __jsx(View,{style:{flexDirection:\"row\",flex:1},__self:_this,__source:{fileName:_jsxFileName,lineNumber:43,columnNumber:17}},__jsx(View,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:44,columnNumber:21}},__jsx(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:45,columnNumber:25}},item.time)),__jsx(View,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:47,columnNumber:21}},__jsx(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:48,columnNumber:25}},item.text)));}),__jsx(TouchableOpacity,{__self:this,__source:{fileName:_jsxFileName,lineNumber:53,columnNumber:13}},\"Start without checks\"),__jsx(TouchableOpacity,{onPress:function onPress(){return setWithoutChecks([]);},__self:this,__source:{fileName:_jsxFileName,lineNumber:54,columnNumber:13}},\"Clear log\"),withChecks.map(function(item){return __jsx(View,{style:{flexDirection:\"row\",flex:1},__self:_this,__source:{fileName:_jsxFileName,lineNumber:59,columnNumber:17}},__jsx(View,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:60,columnNumber:21}},__jsx(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:61,columnNumber:25}},item.time)),__jsx(View,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:63,columnNumber:21}},__jsx(Text,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:64,columnNumber:25}},item.text)));}));}var styles=StyleSheet.create({container:{flex:1,justifyContent:\"center\",alignItems:\"center\"},text:{fontSize:16}});","map":{"version":3,"sources":["/home/andrii/Addspire/Kepp alive/test_keepalive_web/pages/index.js"],"names":["withChecks","setWithChecks","useState","withoutChecks","setWithoutChecks","styles","margin","padding","backgroundColor","color","flexDirection","flex","item","container","justifyContent","alignItems","text","fontSize"],"mappings":"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","sourcesContent":["// @generated: @expo/next-adapter@2.1.52\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\n\nexport default function App() {\n    const [withChecks, setWithChecks] = useState([]);\n    const [withoutChecks, setWithoutChecks] = useState([]);\n    return (\n        <View style={styles.container}>\n            <TouchableOpacity\n                style={{\n                    margin: 10,\n                    padding: 10,\n                    backgroundColor: \"green\",\n                    color: \"white\",\n                }}\n            >\n                Start poll (checks every 20 sec)\n            </TouchableOpacity>\n            <TouchableOpacity\n                style={{\n                    margin: 10,\n                    padding: 10,\n                    backgroundColor: \"red\",\n                    color: \"white\",\n                }}\n            >\n                Stop poll\n            </TouchableOpacity>\n            <TouchableOpacity\n                onPress={() => setWithChecks([])}\n                style={{\n                    margin: 10,\n                    padding: 10,\n                    backgroundColor: \"grey\",\n                    color: \"white\",\n                }}\n            >\n                Clear log\n            </TouchableOpacity>\n            <Text>Log</Text>\n            {withChecks.map((item) => (\n                <View style={{ flexDirection: \"row\", flex: 1 }}>\n                    <View>\n                        <Text>{item.time}</Text>\n                    </View>\n                    <View>\n                        <Text>{item.text}</Text>\n                    </View>\n                </View>\n            ))}\n\n            <TouchableOpacity>Start without checks</TouchableOpacity>\n            <TouchableOpacity onPress={() => setWithoutChecks([])}>\n                Clear log\n            </TouchableOpacity>\n\n            {withChecks.map((item) => (\n                <View style={{ flexDirection: \"row\", flex: 1 }}>\n                    <View>\n                        <Text>{item.time}</Text>\n                    </View>\n                    <View>\n                        <Text>{item.text}</Text>\n                    </View>\n                </View>\n            ))}\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    text: {\n        fontSize: 16,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}