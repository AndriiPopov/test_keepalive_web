{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";var _jsxFileName=\"/home/andrii/Addspire/Kepp alive/test_keepalive_web/pages/index.js\";var __jsx=React.createElement;import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useEffect,useState}from\"react\";import{Button,List,Provider as PaperProvider,TextInput}from\"react-native-paper\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{SSE}from\"../utils/sse\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var sourceWith;var sourceWithout;var timerWith;export default function App(){var _this=this;var _useState=useState([]),withChecks=_useState[0],setWithChecks=_useState[1];var _useState2=useState([]),withoutChecks=_useState2[0],setWithoutChecks=_useState2[1];var _useState3=useState(false),withChecksRunning=_useState3[0],setWithChecksRunning=_useState3[1];var _useState4=useState(\"https://quantum.sh\"),url=_useState4[0],setUrl=_useState4[1];var addLog=function addLog(text,without){if(without)setWithoutChecks([{time:Date().toString(),text:text}].concat(_toConsumableArray(withoutChecks)));else setWithChecks([{time:Date().toString(),text:text}].concat(_toConsumableArray(withChecks)));};useEffect(function(){if(!withChecksRunning){addLog(\"closed\");if(timerWith)clearTimeout(timerWith);}},[withChecksRunning]);var startPoll=function startPoll(){return _regeneratorRuntime.async(function startPoll$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(!withChecksRunning){_context.next=4;break;}addLog(\"already running\");return _context.abrupt(\"return\");case 4:addLog(\"starting\");setWithChecksRunning(true);if(sourceWith)sourceWith.close();if(timerWith)clearTimeout(timerWith);sourceWith=new SSE(url+\"/document/poll\",{headers:{\"Content-Type\":\"application/json\"},payload:JSON.stringify({timeOnClient:Date().toString()})});timerWith=setTimeout(function(){addLog(\"closed because no ping\");setWithChecksRunning(false);},20000);sourceWith.addEventListener(\"message\",function(e){setData({serverDown:false});var news=JSON.parse(e.data);switch(news.messageCode){case\"time\":addLog(\"time on server is \"+news.time);break;case\"ping\":if(timerWith)clearTimeout(timerWith);timerWith=setTimeout(function(){addLog(\"closed because no ping\");setWithChecksRunning(false);},20000);break;}});sourceWith.addEventListener(\"error\",function(){setWithChecksRunning(false);});sourceWith.stream();_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);setWithChecksRunning(false);case 18:case\"end\":return _context.stop();}}},null,null,[[0,15]],Promise);};var sendOneReq=function sendOneReq(){var _res$data,res;return _regeneratorRuntime.async(function sendOneReq$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(axios.post(url+\"/api/time\"));case 3:res=_context2.sent;if(res!=null&&(_res$data=res.data)!=null&&_res$data.time)addLog(\"time on server from one time req: \"+res.data.time);_context2.next=11;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);addLog(\"one time req error\");console.log(_context2.t0);case 11:case\"end\":return _context2.stop();}}},null,null,[[0,7]],Promise);};return _jsx(PaperProvider,{children:_jsxs(View,{style:styles.container,children:[_jsx(TextInput,{value:url,onChangeText:setUrl}),_jsx(Button,{color:\"primary\",onPress:startPoll,children:\"Start poll (checks every 20 sec)\"}),_jsx(Button,{color:\"accent\",onPress:function onPress(){return setWithChecksRunning(false);},children:\"Stop poll\"}),_jsx(Button,{onPress:sendOneReq,children:\"Send normal request\"}),_jsx(Button,{onPress:function onPress(){return setWithChecks([]);},children:\"Clear log\"}),_jsx(Text,{children:\"Log\"}),withChecks.map(function(item){return _jsxs(List.Item,{children:[_jsx(View,{children:_jsx(Text,{children:item.time})}),_jsx(View,{children:_jsx(Text,{style:{color:\"blue\"},children:item.text})})]});})]})});}var styles=StyleSheet.create({container:{flex:1},text:{fontSize:16}});","map":{"version":3,"sources":["/home/andrii/Addspire/Kepp alive/test_keepalive_web/pages/index.js"],"names":["Provider","withChecks","setWithChecks","useState","withoutChecks","setWithoutChecks","withChecksRunning","setWithChecksRunning","url","setUrl","addLog","time","Date","text","useEffect","clearTimeout","startPoll","sourceWith","headers","payload","timeOnClient","timerWith","setTimeout","setData","serverDown","news","JSON","e","sendOneReq","res","axios","console","styles","item","color","container","flex","fontSize"],"mappings":"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","sourcesContent":["// @generated: @expo/next-adapter@2.1.52\nimport React, { useEffect, useState } from \"react\";\nimport {\n    Button,\n    List,\n    Provider as PaperProvider,\n    TextInput,\n} from \"react-native-paper\";\n\nimport { StyleSheet, View } from \"react-native\";\nimport { SSE } from \"../utils/sse\";\nimport axios from \"axios\";\n\nlet sourceWith;\nlet sourceWithout;\n\nlet timerWith;\n\nexport default function App() {\n    const [withChecks, setWithChecks] = useState([]);\n    const [withoutChecks, setWithoutChecks] = useState([]);\n    const [withChecksRunning, setWithChecksRunning] = useState(false);\n    const [url, setUrl] = useState(\"https://quantum.sh\");\n\n    const addLog = (text, without) => {\n        if (without)\n            setWithoutChecks([\n                { time: Date().toString(), text },\n                ...withoutChecks,\n            ]);\n        else setWithChecks([{ time: Date().toString(), text }, ...withChecks]);\n    };\n\n    useEffect(() => {\n        if (!withChecksRunning) {\n            addLog(\"closed\");\n            if (timerWith) clearTimeout(timerWith);\n        }\n    }, [withChecksRunning]);\n\n    const startPoll = async () => {\n        try {\n            if (withChecksRunning) {\n                addLog(\"already running\");\n                return;\n            }\n            addLog(\"starting\");\n            setWithChecksRunning(true);\n\n            if (sourceWith) sourceWith.close();\n            if (timerWith) clearTimeout(timerWith);\n\n            sourceWith = new SSE(url + \"/document/poll\", {\n                headers: { \"Content-Type\": \"application/json\" },\n                payload: JSON.stringify({ timeOnClient: Date().toString() }),\n            });\n\n            timerWith = setTimeout(() => {\n                addLog(\"closed because no ping\");\n                setWithChecksRunning(false);\n            }, 20000);\n            sourceWith.addEventListener(\"message\", (e) => {\n                setData({ serverDown: false });\n                const news = JSON.parse(e.data);\n\n                switch (news.messageCode) {\n                    case \"time\":\n                        addLog(`time on server is ${news.time}`);\n                        break;\n\n                    case \"ping\":\n                        if (timerWith) clearTimeout(timerWith);\n                        timerWith = setTimeout(() => {\n                            addLog(\"closed because no ping\");\n\n                            setWithChecksRunning(false);\n                        }, 20000);\n\n                        break;\n                }\n            });\n\n            sourceWith.addEventListener(\"error\", function () {\n                setWithChecksRunning(false);\n            });\n            sourceWith.stream();\n        } catch (error) {\n            setWithChecksRunning(false);\n        }\n    };\n\n    const sendOneReq = async () => {\n        try {\n            const res = await axios.post(`${url}/api/time`);\n            if (res?.data?.time)\n                addLog(`time on server from one time req: ${res.data.time}`);\n        } catch (error) {\n            addLog(\"one time req error\");\n            console.log(error);\n        }\n    };\n    return (\n        <PaperProvider>\n            <View style={styles.container}>\n                <TextInput value={url} onChangeText={setUrl} />\n\n                <Button color=\"primary\" onPress={startPoll}>\n                    Start poll (checks every 20 sec)\n                </Button>\n                <Button\n                    color=\"accent\"\n                    onPress={() => setWithChecksRunning(false)}\n                >\n                    Stop poll\n                </Button>\n                <Button onPress={sendOneReq}>Send normal request</Button>\n                <Button onPress={() => setWithChecks([])}>Clear log</Button>\n                <Text>Log</Text>\n                {withChecks.map((item) => (\n                    <List.Item>\n                        <View>\n                            <Text>{item.time}</Text>\n                        </View>\n                        <View>\n                            <Text style={{ color: \"blue\" }}>{item.text}</Text>\n                        </View>\n                    </List.Item>\n                ))}\n            </View>\n        </PaperProvider>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    text: {\n        fontSize: 16,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}