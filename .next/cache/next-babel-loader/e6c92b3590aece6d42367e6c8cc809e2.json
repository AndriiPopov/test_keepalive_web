{"ast":null,"code":"var SSE=function SSE(url,options){if(!(this instanceof SSE)){return new SSE(url,options);}this.INITIALIZING=-1;this.CONNECTING=0;this.OPEN=1;this.CLOSED=2;this.url=url;options=options||{};this.headers=options.headers||{};this.payload=options.payload!==undefined?options.payload:'';this.method=options.method||this.payload&&'POST'||'GET';this.withCredentials=!!options.withCredentials;this.FIELD_SEPARATOR=':';this.listeners={};this.xhr=null;this.readyState=this.INITIALIZING;this.progress=0;this.chunk='';this.addEventListener=function(type,listener){if(this.listeners[type]===undefined){this.listeners[type]=[];}if(this.listeners[type].indexOf(listener)===-1){this.listeners[type].push(listener);}};this.removeEventListener=function(type,listener){if(this.listeners[type]===undefined){return;}var filtered=[];this.listeners[type].forEach(function(element){if(element!==listener){filtered.push(element);}});if(filtered.length===0){delete this.listeners[type];}else{this.listeners[type]=filtered;}};this.dispatchEvent=function(e){if(!e){return true;}e.source=this;var onHandler='on'+e.type;if(this.hasOwnProperty(onHandler)){this[onHandler].call(this,e);if(e.defaultPrevented){return false;}}if(this.listeners[e.type]){return this.listeners[e.type].every(function(callback){callback(e);return!e.defaultPrevented;});}return true;};this._setReadyState=function(state){var event={type:'readystatechange'};event.readyState=state;this.readyState=state;this.dispatchEvent(event);};this._onStreamFailure=function(e){this.dispatchEvent({type:'error'});this.close();};this._onStreamProgress=function(e){if(!this.xhr){return;}if(this.xhr.status!==200){this._onStreamFailure(e);return;}if(this.readyState==this.CONNECTING){this.dispatchEvent({type:'open'});this._setReadyState(this.OPEN);}var data=this.xhr.responseText.substring(this.progress);this.progress+=data.length;data.split(/(\\r\\n|\\r|\\n){2}/g).forEach(function(part){if(part.trim().length===0){this.dispatchEvent(this._parseEventChunk(this.chunk.trim()));this.chunk='';}else{this.chunk+=part;}}.bind(this));};this._onStreamLoaded=function(e){this._onStreamProgress(e);this.dispatchEvent(this._parseEventChunk(this.chunk));this.chunk='';};this._parseEventChunk=function(chunk){if(!chunk||chunk.length===0){return null;}var e={id:null,retry:null,data:'',event:'message'};chunk.split(/\\n|\\r\\n|\\r/).forEach(function(line){line=line.trimRight();var index=line.indexOf(this.FIELD_SEPARATOR);if(index<=0){return;}var field=line.substring(0,index);if(!(field in e)){return;}var value=line.substring(index+1).trimLeft();if(field==='data'){e[field]+=value;}else{e[field]=value;}}.bind(this));var event={type:e.event};event.data=e.data;event.id=e.id;return event;};this._checkStreamClosed=function(){if(!this.xhr){return;}if(this.xhr.readyState===XMLHttpRequest.DONE){this._setReadyState(this.CLOSED);this.dispatchEvent({type:'close'});}};this.stream=function(){this._setReadyState(this.CONNECTING);this.xhr=new XMLHttpRequest();this.xhr.addEventListener('progress',this._onStreamProgress.bind(this));this.xhr.addEventListener('load',this._onStreamLoaded.bind(this));this.xhr.addEventListener('readystatechange',this._checkStreamClosed.bind(this));this.xhr.addEventListener('error',this._onStreamFailure.bind(this));this.xhr.addEventListener('abort',this._onStreamFailure.bind(this));this.xhr.open(this.method,this.url);for(var header in this.headers){this.xhr.setRequestHeader(header,this.headers[header]);}this.xhr.withCredentials=this.withCredentials;this.xhr.send(this.payload);};this.close=function(){if(this.readyState===this.CLOSED){return;}this.xhr.abort();this.xhr=null;this._setReadyState(this.CLOSED);};};if(typeof exports!=='undefined'){exports.SSE=SSE;}","map":{"version":3,"sources":["/home/andrii/Addspire/Kepp alive/test_keepalive_web/utils/sse.js"],"names":["SSE","options","filtered","element","e","onHandler","callback","event","type","data","part","chunk","id","retry","line","index","field","value","XMLHttpRequest","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (C) 2016 Maxime Petazzoni <maxime.petazzoni@bulix.org>.\n * All rights reserved.\n */\n\nvar SSE = function (url, options) {\n    if (!(this instanceof SSE)) {\n        return new SSE(url, options)\n    }\n\n    this.INITIALIZING = -1\n    this.CONNECTING = 0\n    this.OPEN = 1\n    this.CLOSED = 2\n\n    this.url = url\n\n    options = options || {}\n    this.headers = options.headers || {}\n    this.payload = options.payload !== undefined ? options.payload : ''\n    this.method = options.method || (this.payload && 'POST') || 'GET'\n    this.withCredentials = !!options.withCredentials\n\n    this.FIELD_SEPARATOR = ':'\n    this.listeners = {}\n\n    this.xhr = null\n    this.readyState = this.INITIALIZING\n    this.progress = 0\n    this.chunk = ''\n\n    this.addEventListener = function (type, listener) {\n        if (this.listeners[type] === undefined) {\n            this.listeners[type] = []\n        }\n\n        if (this.listeners[type].indexOf(listener) === -1) {\n            this.listeners[type].push(listener)\n        }\n    }\n\n    this.removeEventListener = function (type, listener) {\n        if (this.listeners[type] === undefined) {\n            return\n        }\n\n        var filtered = []\n        this.listeners[type].forEach(function (element) {\n            if (element !== listener) {\n                filtered.push(element)\n            }\n        })\n        if (filtered.length === 0) {\n            delete this.listeners[type]\n        } else {\n            this.listeners[type] = filtered\n        }\n    }\n\n    this.dispatchEvent = function (e) {\n        if (!e) {\n            return true\n        }\n\n        e.source = this\n\n        var onHandler = 'on' + e.type\n        if (this.hasOwnProperty(onHandler)) {\n            this[onHandler].call(this, e)\n            if (e.defaultPrevented) {\n                return false\n            }\n        }\n\n        if (this.listeners[e.type]) {\n            return this.listeners[e.type].every(function (callback) {\n                callback(e)\n                return !e.defaultPrevented\n            })\n        }\n\n        return true\n    }\n\n    this._setReadyState = function (state) {\n        var event = { type: 'readystatechange' }\n        event.readyState = state\n        this.readyState = state\n        this.dispatchEvent(event)\n    }\n\n    this._onStreamFailure = function (e) {\n        this.dispatchEvent({ type: 'error' })\n        this.close()\n    }\n\n    this._onStreamProgress = function (e) {\n        if (!this.xhr) {\n            return\n        }\n\n        if (this.xhr.status !== 200) {\n            this._onStreamFailure(e)\n            return\n        }\n\n        if (this.readyState == this.CONNECTING) {\n            this.dispatchEvent({ type: 'open' })\n            this._setReadyState(this.OPEN)\n        }\n\n        var data = this.xhr.responseText.substring(this.progress)\n        this.progress += data.length\n        data.split(/(\\r\\n|\\r|\\n){2}/g).forEach(\n            function (part) {\n                if (part.trim().length === 0) {\n                    this.dispatchEvent(this._parseEventChunk(this.chunk.trim()))\n                    this.chunk = ''\n                } else {\n                    this.chunk += part\n                }\n            }.bind(this)\n        )\n    }\n\n    this._onStreamLoaded = function (e) {\n        this._onStreamProgress(e)\n\n        // Parse the last chunk.\n        this.dispatchEvent(this._parseEventChunk(this.chunk))\n        this.chunk = ''\n    }\n\n    /**\n     * Parse a received SSE event chunk into a constructed event object.\n     */\n    this._parseEventChunk = function (chunk) {\n        if (!chunk || chunk.length === 0) {\n            return null\n        }\n\n        var e = { id: null, retry: null, data: '', event: 'message' }\n        chunk.split(/\\n|\\r\\n|\\r/).forEach(\n            function (line) {\n                line = line.trimRight()\n                var index = line.indexOf(this.FIELD_SEPARATOR)\n                if (index <= 0) {\n                    // Line was either empty, or started with a separator and is a comment.\n                    // Either way, ignore.\n                    return\n                }\n\n                var field = line.substring(0, index)\n                if (!(field in e)) {\n                    return\n                }\n\n                var value = line.substring(index + 1).trimLeft()\n                if (field === 'data') {\n                    e[field] += value\n                } else {\n                    e[field] = value\n                }\n            }.bind(this)\n        )\n\n        var event = { type: e.event }\n        event.data = e.data\n        event.id = e.id\n        return event\n    }\n\n    this._checkStreamClosed = function () {\n        if (!this.xhr) {\n            return\n        }\n\n        if (this.xhr.readyState === XMLHttpRequest.DONE) {\n            this._setReadyState(this.CLOSED)\n            this.dispatchEvent({ type: 'close' })\n        }\n    }\n\n    this.stream = function () {\n        this._setReadyState(this.CONNECTING)\n\n        this.xhr = new XMLHttpRequest()\n        this.xhr.addEventListener('progress', this._onStreamProgress.bind(this))\n        this.xhr.addEventListener('load', this._onStreamLoaded.bind(this))\n        this.xhr.addEventListener(\n            'readystatechange',\n            this._checkStreamClosed.bind(this)\n        )\n        this.xhr.addEventListener('error', this._onStreamFailure.bind(this))\n        this.xhr.addEventListener('abort', this._onStreamFailure.bind(this))\n        this.xhr.open(this.method, this.url)\n        for (var header in this.headers) {\n            this.xhr.setRequestHeader(header, this.headers[header])\n        }\n        this.xhr.withCredentials = this.withCredentials\n        this.xhr.send(this.payload)\n    }\n\n    this.close = function () {\n        if (this.readyState === this.CLOSED) {\n            return\n        }\n\n        this.xhr.abort()\n        this.xhr = null\n        this._setReadyState(this.CLOSED)\n    }\n}\n\n// Export our SSE module for npm.js\nif (typeof exports !== 'undefined') {\n    exports.SSE = SSE\n}\n"]},"metadata":{},"sourceType":"script"}